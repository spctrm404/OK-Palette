@use '../../styles/typography' as t;

$multiplier: 0.75;
$height: 3rem * $multiplier;
$shape-height: 2.5rem * $multiplier;
$input-px: 1rem * $multiplier;
$rad: 0.25rem;
$duration: 200ms;
$easing: cubic-bezier(0.2, 0, 0, 1);

.number-field {
  $root-selector: &;

  &__root {
    display: grid;
    grid-template-rows: 1fr min-content 1fr;
    grid-template-columns: min-content 1fr min-content;
    place-items: stretch stretch;
    width: fit-content;
    height: $height;

    @include t.apply-role('number');

    &[data-no-button] {
      grid-template-columns: minmax(
        calc(var(--min-ch) * 1ch + 2 * $input-px),
        1fr
      );
    }
  }

  &__group {
    display: grid;
    grid-template-rows: subgrid;
    grid-template-columns: subgrid;
    grid-row: 1 / -1;
    grid-column: 1 / -1;
    place-items: center stretch;
  }

  &__input {
    $parent-selector: &;

    position: relative;
    z-index: 3;
    grid-row: 2 / span 1;
    grid-column: 2 / span 1;
    max-width: calc((var(--min-ch) + 1) * 1ch + 2 * $input-px);
    padding-block: 0;
    padding-inline: $input-px;
    color: var(--on-secondary-container);
    text-align: right;
    background-color: transparent;
    border: 0;
    border-radius: $rad;
    transition: color $duration $easing;

    @include t.apply-role('number');

    &:focus {
      outline: none;
    }

    &[data-disabled] {
      color: color-mix(in oklch, var(--on-surface) 38%, transparent);
    }

    @at-root #{$root-selector}[data-no-button] #{&} {
      grid-column: 1 / span 1;
    }

    &__shape {
      position: relative;
      z-index: 1;
      grid-row: 2 / span 1;
      grid-column: 2 / span 1;
      height: $shape-height;
      background-color: var(--secondary-container);
      border-radius: $rad;
      transition: background-color $duration $easing;

      @at-root #{$parent-selector}[data-disabled] ~ #{&} {
        background-color: color-mix(
          in oklch,
          var(--on-surface) 12%,
          transparent
        );
      }

      @at-root #{$root-selector}[data-no-button] #{&} {
        grid-column: 1 / span 1;
      }
    }

    &__state {
      position: relative;
      z-index: 2;
      grid-row: 2 / span 1;
      grid-column: 2 / span 1;
      background-color: var(--on-secondary-container);
      border-radius: $rad;
      opacity: 0;
      transition: background-color $duration $easing, opacity $duration $easing,
        transform $duration $easing;
      transform: scale(0%, 100%);

      @at-root .number-field__input[data-hovered] ~ #{&} {
        opacity: 0.08;
        transform: scale(100%, 100%);
      }
      @at-root #{$parent-selector}[data-focused] ~ #{&} {
        opacity: 0.08;
        transform: scale(100%, 100%);
      }
      @at-root #{$parent-selector}[data-focus-visible] ~ #{&} {
        opacity: 0.08;
        transform: scale(100%, 100%);
      }
      @at-root #{$parent-selector}[data-disabled] ~ #{&} {
        opacity: 0;
        transform: scale(0%, 100%);
      }

      @at-root #{$root-selector}[data-no-button] #{&} {
        grid-column: 1 / span 1;
      }
    }
  }

  &__button {
    grid-row: 2 / span 1;
    place-self: center center;

    &--part {
      &-decrease {
        grid-column: 1 / span 1;
      }

      &-increase {
        grid-column: 3 / span 1;
      }
    }
  }
}
