$multiplier: 0.75;
$button-size: 3rem * $multiplier;
$button-state-size: 2.5rem * $multiplier;
$button-shape-size: 1.25rem * $multiplier;
$button-shape-border-thickness: 0.125rem;
$button-shape-core-size: $button-shape-size - 2 * $button-shape-border-thickness -
  0.375rem * $multiplier;
$text-pr: 0.75rem;
$duration: 200ms;
$easing: cubic-bezier(0.2, 0, 0, 1);

.radio-group {
  $root-selector: &;

  &__root {
    display: grid;

    &[data-orientation='vertical'] {
      grid-auto-rows: minmax(min-content, 1fr);
      grid-auto-flow: row;
      place-items: center stretch;
    }

    &[data-orientation='horizontal'] {
      grid-auto-columns: minmax(min-content, 1fr);
      grid-auto-flow: column;
      place-items: center start;
    }
  }
}

.radio {
  $root-selector: &;

  display: grid;
  grid-template-rows: $button-size;
  grid-template-columns: $button-size min-content;
  place-items: center start;

  &__button {
    position: relative;
    grid-column: 1 / span 1;
    place-self: stretch stretch;

    &__state {
      position: absolute;
      top: 50%;
      left: 50%;
      width: $button-state-size;
      height: $button-state-size;
      background-color: var(--on-surface);
      border-radius: 512rem;
      opacity: 0;
      transition: background-color $duration $easing, opacity $duration $easing,
        transform $duration $easing;
      transform: translate(-50%, -50%) scale(0%, 0%);

      @at-root #{$root-selector}[data-hovered] #{&} {
        opacity: 0.08;
        transform: translate(-50%, -50%) scale(100%, 100%);
      }
      @at-root #{$root-selector}[data-focused] #{&} {
        opacity: 0.08;
        transform: translate(-50%, -50%) scale(100%, 100%);
      }
      @at-root #{$root-selector}[data-focus-visible] #{&} {
        opacity: 0.08;
        transform: translate(-50%, -50%) scale(100%, 100%);
      }
      @at-root #{$root-selector}[data-pressed] #{&} {
        background-color: var(--primary);
        opacity: 0.12;
        transform: translate(-50%, -50%) scale(100%, 100%);
      }
      @at-root #{$root-selector}[data-selected] #{&} {
        background-color: var(--primary);
      }
    }

    &__shape {
      position: absolute;
      top: 50%;
      left: 50%;
      width: $button-shape-size;
      height: $button-shape-size;
      border-color: var(--on-surface-variant);
      border-style: solid;
      border-width: $button-shape-border-thickness;
      border-radius: 512rem;
      transition: border-color $duration $easing;
      transform: translate(-50%, -50%);

      @at-root #{$root-selector}[data-hovered] #{&} {
        border-color: var(--on-surface);
      }
      @at-root #{$root-selector}[data-focused] #{&} {
        border-color: var(--on-surface);
      }
      @at-root #{$root-selector}[data-focus-visible] #{&} {
        border-color: var(--on-surface);
      }
      @at-root #{$root-selector}[data-pressed] #{&} {
        border-color: var(--on-surface);
      }
      @at-root #{$root-selector}[data-selected] #{&} {
        border-color: var(--primary);
      }

      &::after {
        position: absolute;
        top: 50%;
        left: 50%;
        display: block;
        width: $button-shape-core-size;
        height: $button-shape-core-size;
        content: '';
        background-color: var(--on-surface);
        border-radius: 512rem;
        transition: background-color $duration $easing,
          transform $duration $easing;
        transform: translate(-50%, -50%) scale(0%, 0%);

        @at-root #{$root-selector}[data-selected] #{&} {
          background-color: var(--primary);
          transform: translate(-50%, -50%) scale(100%, 100%);
        }
      }
    }
  }

  &__text {
    padding-right: $text-pr;
    color: var(--on-surface);
    white-space: nowrap;
    user-select: none;
  }
}
